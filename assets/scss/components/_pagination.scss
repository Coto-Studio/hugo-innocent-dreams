@use '../libs' as *;

///
/// Massively by HTML5 UP
/// html5up.net | @ajlkn
/// Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)
///

/* Pagination */

.pagination {
  @include vendor("display", "inline-flex");
  @include vendor("user-select", "none");
  cursor: default;
  list-style: none;
  margin: 0 0 size(element-margin) 2px;
  padding: 0;

  a,
  span {
    @include vendor(
      "transition",
      (
        "background-color #{duration(transition)} ease-in-out",
        "border-color #{duration(transition)} ease-in-out",
        "box-shadow #{duration(transition)} ease-in-out",
        "color #{duration(transition)} ease-in-out"
      )
    );
    border: solid 2px;
    display: inline-block;
    font-family: font(family-heading);
    font-size: 0.8rem;
    font-weight: font(weight-heading);
    height: size(element-height);
    letter-spacing: 0.075em;
    letter-spacing: font(letter-spacing-heading);
    line-height: calc(#{size(element-height)} - 4px);
    margin-left: -2px;
    min-width: size(element-height);
    position: relative;
    text-align: center;
    text-decoration: none;
    text-transform: uppercase;
  }

  .next,
  .previous {
    @include icon;
    padding: 0 1.75rem;

    &:before {
      display: inline-block;
      color: inherit !important;
    }
  }

  .previous {
    &:before {
      content: "\f104";
      margin-right: calc(0.75em / 0.8);
    }
  }

  .next {
    &:before {
      content: "\f105";
      float: right;
      margin-left: calc(0.75em / 0.8);
    }
  }

  @include breakpoint("<=medium") {
    a,
    span {
      font-size: 0.9rem;
    }
  }

  @include breakpoint("<=xsmall") {
    .page,
    .extra {
      display: none;
    }
  }
}

@mixin color-pagination($p: null) {
  .pagination {
    a,
    span {
      border-color: palette($p, border);
    }

    a {
      color: palette($p, fg-bold) !important;

      &:hover {
        color: palette($p, accent) !important;
        border-color: palette($p, accent);
        z-index: 1;

        & + a,
        & + span {
          border-left-color: palette($p, accent);
        }
      }

      &.active {
        background-color: palette($p, border);
      }
    }

    span {
      color: palette($p, border);
    }
  }
}

@include color-pagination;
